#!/usr/bin/env perl

use strict;
use warnings;
use Bloonix::Plugin;
use JSON;

#------------------------------------------------------------------------------
#
# Author      : Ebow Halm <ejh@cpan.org>
# Created     : Feb 2017.
# Description : Bloonix plugin to check SSL setups.
# License     : Apache 2.0. Copyright (C) 2017 Ebow Halm.
#
#------------------------------------------------------------------------------

###########     Integrate into Bloonix plugin infrastructure.      ############

my $plugin = Bloonix::Plugin->new( version => '0.5' );
$plugin->info(
    join( " ",
        "This plugin checks a domain and gives it an SSL grade.",
        "To do this, it requires a cron job to be run.",
        "The script the cron job should run has been installed to: ",
        "'/usr/lib/bloonix/etc/cron/cron-ssllabs'.",
        "For the cron script to work, you must install the ssllabs-scan",
        "utility from https://github.com/ssllabs/ssllabs-scan on the machine",
        "that runs the agent that has to execute the cronjob.",
        "To setup this plugin to check the domain 'blunix.com'",
        "for example",
        "enter 'blunix.com' as the value of the domain input under",
        "Check settings.",
        "Then create a cronjob that has 'blunix.com' passed",
        "to the cron script '/usr/lib/bloonix/etc/cron/cron-ssllabs' like this: ",
        "* */5 * * * /usr/lib/bloonix/etc/cron/cron-ssllabs blunix.com",
        "Note that a file named /var/cache/bloonix/ssllabs_blunix.com.json",
        "will be created by the cron job and will be read by the agent",
    )
);

$plugin->add_option(
    name        => 'Domain',
    option      => 'domain',
    description => 'Domain to check with SSLLabs',
    value_type  => 'string',
    example     => 'www.example.com',
    mandatory   => 1,
);

$plugin->add_option(
    name        => 'Grade',
    option      => 'grade',
    description => 'Grade domain should meet or beat',
    value_type  => 'string',
    value       => 'A+|A|A-|B+|B|B-|C+|C|C-|D+|D|D-|E+|E|E-',
    regex       => qr/^[A-E][-+]?\z/,
    mandatory   => 1,
);

$plugin->example(
    description => "Warn when blunix.com's SSLLabs scan grade is worse than A",
    arguments   => [
        domain  => 'blunix.com',
        grade => 'A'
    ]
);

my $opt = $plugin->parse_options;

#------------------------------------------------------------------------------

###########     Verify basic pre-requisites are satisfied.         ############
#
# 1. Results file exists, is not empty, and its contents can be read.
# 2. Data format matches expectations (JSON with expected attributes).

local $/;
my $file = "/var/cache/bloonix/ssllabs_$opt->{domain}.json";
open( my $fh, "<", $file )
    or $plugin->exit(
    status  => 'UNKNOWN',
    message => "Cannot open $file: $!."
    );

my $output = <$fh>;
close($fh);

my $results;
eval { $results = decode_json $output; };
if ($@) {
    $plugin->exit(
        status  => 'UNKNOWN',
        message => "Invalid file format '$file'.  Is not JSON."
    );
}

my $grade             = $results->[0]->{endpoints}->[0]->{grade};
my $gradeTrustIgnored = $results->[0]->{endpoints}->[0]->{gradeTrustIgnored};

if ($grade) {

    my $pass = 0;    # Assume failure by default.
    my ( $min_letter_grade, $min_qualifier ) = $opt->{grade} =~ /^(.)(.?)/;
    my ( $letter,           $qualifier )     = $grade =~ /^(.)(.?)/;

    if ( $letter lt $min_letter_grade ) {
        $pass = 1;    # 'A' is less than 'B' but is a better grade.
    } elsif ( $letter eq $min_letter_grade ) {
        if ($min_qualifier) {
            if ( $min_qualifier eq '-' ) {
                $pass = 1;    # Can't get a worse grade for a given letter.
            } else {
                $pass = 1 if $qualifier && $qualifier eq '+';
            }
        } else {
            $pass = 1 unless $qualifier && $qualifier eq '-';
        }
    }

    if ($pass) {
        $plugin->exit(
            status => 'OK',
            message =>
                "SSL grade=$grade, gradeTrustIgnored=$gradeTrustIgnored"
        );
    } else {
        $plugin->exit(
            status => 'WARNING',
            message =>
                "SSL grade=$grade is worse than minimum grade=$opt->{grade}"
        );
    }

}

$plugin->exit(
    status  => 'UNKNOWN',
    message => " SSL results for '$opt->{domain}' not found in results file . "
);

#------------------------------------------------------------------------------
